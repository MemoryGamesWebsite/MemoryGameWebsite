{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Envy\\\\my-app\\\\src\\\\Game2\\\\Game2.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport Board from \"./board\";\nimport initializeDeck from \"./deck\";\nexport default function Game2() {\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [dimension, setDimension] = useState(400);\n  const [solved, setSolved] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    resizeBoard();\n    setCards(initializeDeck());\n  }, []);\n  useEffect(() => {\n    const resizeListener = window.addEventListener(\"resize\", resizeBoard);\n    return () => window.removeEventListener(\"resize\", resizeListener);\n  });\n\n  const handleClick = id => {\n    setDisabled(true);\n\n    if (flipped.length === 0) {\n      setFlipped([id]);\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return;\n      setFlipped([flipped[0], id]);\n\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id]);\n        resetCards();\n      } else {\n        setTimeout(resetCards, 500);\n      }\n    }\n  };\n\n  const sameCardClicked = id => flipped.includes(id);\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const isMatch = id => {\n    const clickedCard = cards.find(card => card.id === id);\n    const flippedCard = cards.find(card => flipped[0] === card.id);\n    return flippedCard.type === clickedCard.type;\n  };\n\n  const resizeBoard = () => {\n    setDimension(Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight));\n  };\n\n  {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      \"color-black\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Memory Match\"), React.createElement(Board, {\n      dimension: dimension,\n      cards: cards,\n      flipped: flipped,\n      handleClick: handleClick,\n      disabled: disabled,\n      solved: solved,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/Envy/my-app/src/Game2/Game2.jsx"],"names":["React","Component","useState","useEffect","Board","initializeDeck","Game2","cards","setCards","flipped","setFlipped","dimension","setDimension","solved","setSolved","disabled","setDisabled","resizeBoard","resizeListener","window","addEventListener","removeEventListener","handleClick","id","length","sameCardClicked","isMatch","resetCards","setTimeout","includes","clickedCard","find","card","flippedCard","type","Math","min","document","documentElement","clientWidth","clientHeight"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport Board from \"./board\";\r\n\r\nimport initializeDeck from \"./deck\";\r\nexport default function Game2() {\r\n  const [cards, setCards] = useState([]);\r\n  const [flipped, setFlipped] = useState([]);\r\n  const [dimension, setDimension] = useState(400);\r\n  const [solved, setSolved] = useState([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    resizeBoard();\r\n    setCards(initializeDeck());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const resizeListener = window.addEventListener(\"resize\", resizeBoard);\r\n\r\n    return () => window.removeEventListener(\"resize\", resizeListener);\r\n  });\r\n  const handleClick = (id) => {\r\n    setDisabled(true);\r\n    if (flipped.length === 0) {\r\n      setFlipped([id]);\r\n      setDisabled(false);\r\n    } else {\r\n      if (sameCardClicked(id)) return;\r\n      setFlipped([flipped[0], id]);\r\n      if (isMatch(id)) {\r\n        setSolved([...solved, flipped[0], id]);\r\n        resetCards();\r\n      } else {\r\n        setTimeout(resetCards, 500);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sameCardClicked = (id) => flipped.includes(id);\r\n  const resetCards = () => {\r\n    setFlipped([]);\r\n    setDisabled(false);\r\n  };\r\n  const isMatch = (id) => {\r\n    const clickedCard = cards.find((card) => card.id === id);\r\n    const flippedCard = cards.find((card) => flipped[0] === card.id);\r\n    return flippedCard.type === clickedCard.type;\r\n  };\r\n\r\n  const resizeBoard = () => {\r\n    setDimension(\r\n      Math.min(\r\n        document.documentElement.clientWidth,\r\n        document.documentElement.clientHeight\r\n      )\r\n    );\r\n  };\r\n\r\n  {\r\n    return (\r\n      <div>\r\n        <h2 color-black> Memory Match</h2>\r\n        <Board\r\n          dimension={dimension}\r\n          cards={cards}\r\n          flipped={flipped}\r\n          handleClick={handleClick}\r\n          disabled={disabled}\r\n          solved={solved}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}