{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Envy\\\\my-app\\\\src\\\\Timer.js\";\n\n/*const React = require('react')\r\nconst ms = require('pretty-ms')\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      time: 3000,\r\n      start: 3000,\r\n      isOn: false\r\n    }\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n  }\r\n  startTimer() {\r\n    this.setState({\r\n      time: this.state.time,\r\n     start: Date.now() - this.state.time,\r\n    /* start: this.state.time + Date.now(),*/\n\n/*    isOn: true\r\n  })\r\n  this.timer = setInterval(() => this.setState({\r\n    time: Date.now() - this.state.start \r\n  }), 1);\r\n}\r\n  \r\n  stopTimer() {\r\n  this.setState({isOn: false})\r\n  clearInterval(this.timer)\r\n}\r\nresetTimer() {\r\n  this.setState({time: 3000})\r\n}\r\nrender() {\r\n  let start = (this.state.time == 3000) ?\r\n    <button onClick={this.startTimer}>start</button> :\r\n    null\r\n  let stop = (this.state.isOn) ?\r\n    <button onClick={this.stopTimer}>stop</button> :\r\n    null\r\n  let reset = (this.state.time != 3000 && !this.state.isOn) ?\r\n    <button onClick={this.resetTimer}>reset</button> :\r\n    null\r\n  let resume = (this.state.time != 3000 && !this.state.isOn) ?\r\n    <button onClick={this.startTimer}>resume</button> :\r\n    null\r\n  return(\r\n    <div>\r\n      <h3>timer: {ms(this.state.time)}</h3>\r\n      {start}\r\n      {resume}\r\n      {stop}\r\n      {reset}\r\n    </div>\r\n  )\r\n}\r\n}\r\nmodule.exports = Timer*/\nconst React = require('react');\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  startTimer() {\n    this.timer = setInterval(() => this.setState({\n      time: this.state.time + 1\n    }), 1000);\n    console.log(\"start\");\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    console.log(\"stop\");\n  }\n\n  resetTimer() {\n    this.setState({\n      time: 0\n    });\n    console.log(\"reset\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"timer: \", this.state.time), React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"stop\"), React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"reset\"));\n  }\n\n}\n\nmodule.exports = Timer;","map":{"version":3,"sources":["C:/Users/Envy/my-app/src/Timer.js"],"names":["React","require","Timer","Component","constructor","props","state","time","startTimer","bind","stopTimer","resetTimer","timer","setInterval","setState","console","log","clearInterval","render","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAsBE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCF,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDD,EAAAA,UAAU,GAAG;AACX,SAAKI,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AAC3CP,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AADmB,KAAd,CAAP,EAEpB,IAFoB,CAAxB;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACDN,EAAAA,SAAS,GAAG;AACVO,IAAAA,aAAa,CAAC,KAAKL,KAAN,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AACDL,EAAAA,UAAU,GAAG;AACX,SAAKG,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAE;AAAP,KAAd;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACDE,EAAAA,MAAM,GAAG;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKZ,KAAL,CAAWC,IAAvB,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAQF;;AAjCiC;;AAmCpCQ,MAAM,CAACC,OAAP,GAAiBlB,KAAjB","sourcesContent":["/*const React = require('react')\r\nconst ms = require('pretty-ms')\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      time: 3000,\r\n      start: 3000,\r\n      isOn: false\r\n    }\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n  }\r\n  startTimer() {\r\n    this.setState({\r\n      time: this.state.time,\r\n     start: Date.now() - this.state.time,\r\n    /* start: this.state.time + Date.now(),*/\r\n  /*    isOn: true\r\n    })\r\n    this.timer = setInterval(() => this.setState({\r\n      time: Date.now() - this.state.start \r\n    }), 1);\r\n  }\r\n\r\n  \r\n\r\n  stopTimer() {\r\n    this.setState({isOn: false})\r\n    clearInterval(this.timer)\r\n  }\r\n  resetTimer() {\r\n    this.setState({time: 3000})\r\n  }\r\n  render() {\r\n    let start = (this.state.time == 3000) ?\r\n      <button onClick={this.startTimer}>start</button> :\r\n      null\r\n    let stop = (this.state.isOn) ?\r\n      <button onClick={this.stopTimer}>stop</button> :\r\n      null\r\n    let reset = (this.state.time != 3000 && !this.state.isOn) ?\r\n      <button onClick={this.resetTimer}>reset</button> :\r\n      null\r\n    let resume = (this.state.time != 3000 && !this.state.isOn) ?\r\n      <button onClick={this.startTimer}>resume</button> :\r\n      null\r\n    return(\r\n      <div>\r\n        <h3>timer: {ms(this.state.time)}</h3>\r\n        {start}\r\n        {resume}\r\n        {stop}\r\n        {reset}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nmodule.exports = Timer*/\r\nconst React = require('react')\r\nclass Timer extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      time: 0\r\n    }\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n  }\r\n  startTimer() {\r\n    this.timer = setInterval(() => this.setState({\r\n      time: this.state.time + 1\r\n    }), 1000)\r\n    console.log(\"start\")\r\n  }\r\n  stopTimer() {\r\n    clearInterval(this.timer)\r\n    console.log(\"stop\")\r\n  }\r\n  resetTimer() {\r\n    this.setState({time: 0})\r\n    console.log(\"reset\")\r\n  }\r\n  render() {\r\n     return (\r\n       <div>\r\n         <h3>timer: {this.state.time}</h3>\r\n         <button onClick={this.startTimer}>start</button>\r\n         <button onClick={this.stopTimer}>stop</button>\r\n         <button onClick={this.resetTimer}>reset</button>\r\n       </div>\r\n     );\r\n  }\r\n}\r\nmodule.exports = Timer"]},"metadata":{},"sourceType":"module"}