{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Envy\\\\my-app\\\\src\\\\Game1.js\";\nimport React, { Component } from 'react';\nimport Board from './Board.js';\nexport default class Game1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWhite: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Game1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n}\n/*import React, { Component } from 'react'\r\nimport Board from './Board';\r\n\r\nexport default class Game1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ]\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n\r\n    }\r\n\r\n    hhg(i)\r\n    {\r\n        const cardcolor = true;\r\n        this.setState({\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to #' + move : 'Start the Game';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => { this.jumpTo(move) }}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner is ' + winner;\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i) => this.handleClick(i)}\r\n                        squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}*/","map":{"version":3,"sources":["C:/Users/Envy/my-app/src/Game1.js"],"names":["React","Component","Board","Game1","constructor","props","state","isWhite","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AACDC,EAAAA,MAAM,GAAE;AACV,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAKG;;AAbwC;AAgB7C","sourcesContent":["import React, { Component } from 'react';\r\nimport Board from './Board.js';\r\n\r\nexport default class Game1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isWhite: true\r\n        }\r\n    }\r\n    render(){\r\n  return (\r\n    <div className=\"Game1\">\r\n        <Board/>\r\n    </div>\r\n  );\r\n    }\r\n}\r\n\r\n/*import React, { Component } from 'react'\r\nimport Board from './Board';\r\n\r\nexport default class Game1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [\r\n                { squares: Array(9).fill(null) }\r\n            ]\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step%2)===0\r\n        })\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const winner = calculateWinner(squares);\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length\r\n        });\r\n\r\n    }\r\n\r\n    hhg(i)\r\n    {\r\n        const cardcolor = true;\r\n        this.setState({\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to #' + move : 'Start the Game';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => { this.jumpTo(move) }}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        });\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner is ' + winner;\r\n        } else {\r\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board onClick={(i) => this.handleClick(i)}\r\n                        squares={current.squares} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ul>{moves}</ul>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}*/"]},"metadata":{},"sourceType":"module"}